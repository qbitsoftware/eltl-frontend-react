/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminLayoutImport } from './routes/admin/layout'
import { Route as IndexImport } from './routes/index'
import { Route as VoistlusedIndexImport } from './routes/voistlused/index'
import { Route as UudisedIndexImport } from './routes/uudised/index'
import { Route as TereIndexImport } from './routes/tere/index'
import { Route as ReitingIndexImport } from './routes/reiting/index'
import { Route as ReeglidIndexImport } from './routes/reeglid/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as KontaktIndexImport } from './routes/kontakt/index'
import { Route as KlubidIndexImport } from './routes/klubid/index'
import { Route as VoistlusedTournamentidImport } from './routes/voistlused/$tournamentid'
import { Route as UudisedBlogidImport } from './routes/uudised/$blogid'
import { Route as ProfiilIdIndexImport } from './routes/profiil/$id/index'
import { Route as AdminTournamentsIndexImport } from './routes/admin/tournaments/index'
import { Route as AdminDashboardIndexImport } from './routes/admin/dashboard/index'
import { Route as AdminTournamentsTournamentidLayoutImport } from './routes/admin/tournaments/$tournamentid/layout'
import { Route as AdminTournamentsNewIndexImport } from './routes/admin/tournaments/new/index'
import { Route as AdminTournamentsTournamentidParticipantsIndexImport } from './routes/admin/tournaments/$tournamentid/participants/index'
import { Route as AdminTournamentsTournamentidMatchesIndexImport } from './routes/admin/tournaments/$tournamentid/matches/index'
import { Route as AdminTournamentsTournamentidEditIndexImport } from './routes/admin/tournaments/$tournamentid/edit/index'
import { Route as AdminTournamentsTournamentidBracketsIndexImport } from './routes/admin/tournaments/$tournamentid/brackets/index'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const AdminLayoutRoute = AdminLayoutImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VoistlusedIndexRoute = VoistlusedIndexImport.update({
  id: '/voistlused/',
  path: '/voistlused/',
  getParentRoute: () => rootRoute,
} as any)

const UudisedIndexRoute = UudisedIndexImport.update({
  id: '/uudised/',
  path: '/uudised/',
  getParentRoute: () => rootRoute,
} as any)

const TereIndexRoute = TereIndexImport.update({
  id: '/tere/',
  path: '/tere/',
  getParentRoute: () => rootRoute,
} as any)

const ReitingIndexRoute = ReitingIndexImport.update({
  id: '/reiting/',
  path: '/reiting/',
  getParentRoute: () => rootRoute,
} as any)

const ReeglidIndexRoute = ReeglidIndexImport.update({
  id: '/reeglid/',
  path: '/reeglid/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const KontaktIndexRoute = KontaktIndexImport.update({
  id: '/kontakt/',
  path: '/kontakt/',
  getParentRoute: () => rootRoute,
} as any)

const KlubidIndexRoute = KlubidIndexImport.update({
  id: '/klubid/',
  path: '/klubid/',
  getParentRoute: () => rootRoute,
} as any)

const VoistlusedTournamentidRoute = VoistlusedTournamentidImport.update({
  id: '/voistlused/$tournamentid',
  path: '/voistlused/$tournamentid',
  getParentRoute: () => rootRoute,
} as any)

const UudisedBlogidRoute = UudisedBlogidImport.update({
  id: '/uudised/$blogid',
  path: '/uudised/$blogid',
  getParentRoute: () => rootRoute,
} as any)

const ProfiilIdIndexRoute = ProfiilIdIndexImport.update({
  id: '/profiil/$id/',
  path: '/profiil/$id/',
  getParentRoute: () => rootRoute,
} as any)

const AdminTournamentsIndexRoute = AdminTournamentsIndexImport.update({
  id: '/tournaments/',
  path: '/tournaments/',
  getParentRoute: () => AdminLayoutRoute,
} as any)

const AdminDashboardIndexRoute = AdminDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AdminLayoutRoute,
} as any)

const AdminTournamentsTournamentidLayoutRoute =
  AdminTournamentsTournamentidLayoutImport.update({
    id: '/tournaments/$tournamentid',
    path: '/tournaments/$tournamentid',
    getParentRoute: () => AdminLayoutRoute,
  } as any)

const AdminTournamentsNewIndexRoute = AdminTournamentsNewIndexImport.update({
  id: '/tournaments/new/',
  path: '/tournaments/new/',
  getParentRoute: () => AdminLayoutRoute,
} as any)

const AdminTournamentsTournamentidParticipantsIndexRoute =
  AdminTournamentsTournamentidParticipantsIndexImport.update({
    id: '/participants/',
    path: '/participants/',
    getParentRoute: () => AdminTournamentsTournamentidLayoutRoute,
  } as any)

const AdminTournamentsTournamentidMatchesIndexRoute =
  AdminTournamentsTournamentidMatchesIndexImport.update({
    id: '/matches/',
    path: '/matches/',
    getParentRoute: () => AdminTournamentsTournamentidLayoutRoute,
  } as any)

const AdminTournamentsTournamentidEditIndexRoute =
  AdminTournamentsTournamentidEditIndexImport.update({
    id: '/edit/',
    path: '/edit/',
    getParentRoute: () => AdminTournamentsTournamentidLayoutRoute,
  } as any)

const AdminTournamentsTournamentidBracketsIndexRoute =
  AdminTournamentsTournamentidBracketsIndexImport.update({
    id: '/brackets/',
    path: '/brackets/',
    getParentRoute: () => AdminTournamentsTournamentidLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminLayoutImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/uudised/$blogid': {
      id: '/uudised/$blogid'
      path: '/uudised/$blogid'
      fullPath: '/uudised/$blogid'
      preLoaderRoute: typeof UudisedBlogidImport
      parentRoute: typeof rootRoute
    }
    '/voistlused/$tournamentid': {
      id: '/voistlused/$tournamentid'
      path: '/voistlused/$tournamentid'
      fullPath: '/voistlused/$tournamentid'
      preLoaderRoute: typeof VoistlusedTournamentidImport
      parentRoute: typeof rootRoute
    }
    '/klubid/': {
      id: '/klubid/'
      path: '/klubid'
      fullPath: '/klubid'
      preLoaderRoute: typeof KlubidIndexImport
      parentRoute: typeof rootRoute
    }
    '/kontakt/': {
      id: '/kontakt/'
      path: '/kontakt'
      fullPath: '/kontakt'
      preLoaderRoute: typeof KontaktIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/reeglid/': {
      id: '/reeglid/'
      path: '/reeglid'
      fullPath: '/reeglid'
      preLoaderRoute: typeof ReeglidIndexImport
      parentRoute: typeof rootRoute
    }
    '/reiting/': {
      id: '/reiting/'
      path: '/reiting'
      fullPath: '/reiting'
      preLoaderRoute: typeof ReitingIndexImport
      parentRoute: typeof rootRoute
    }
    '/tere/': {
      id: '/tere/'
      path: '/tere'
      fullPath: '/tere'
      preLoaderRoute: typeof TereIndexImport
      parentRoute: typeof rootRoute
    }
    '/uudised/': {
      id: '/uudised/'
      path: '/uudised'
      fullPath: '/uudised'
      preLoaderRoute: typeof UudisedIndexImport
      parentRoute: typeof rootRoute
    }
    '/voistlused/': {
      id: '/voistlused/'
      path: '/voistlused'
      fullPath: '/voistlused'
      preLoaderRoute: typeof VoistlusedIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/tournaments/$tournamentid': {
      id: '/admin/tournaments/$tournamentid'
      path: '/tournaments/$tournamentid'
      fullPath: '/admin/tournaments/$tournamentid'
      preLoaderRoute: typeof AdminTournamentsTournamentidLayoutImport
      parentRoute: typeof AdminLayoutImport
    }
    '/admin/dashboard/': {
      id: '/admin/dashboard/'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardIndexImport
      parentRoute: typeof AdminLayoutImport
    }
    '/admin/tournaments/': {
      id: '/admin/tournaments/'
      path: '/tournaments'
      fullPath: '/admin/tournaments'
      preLoaderRoute: typeof AdminTournamentsIndexImport
      parentRoute: typeof AdminLayoutImport
    }
    '/profiil/$id/': {
      id: '/profiil/$id/'
      path: '/profiil/$id'
      fullPath: '/profiil/$id'
      preLoaderRoute: typeof ProfiilIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/tournaments/new/': {
      id: '/admin/tournaments/new/'
      path: '/tournaments/new'
      fullPath: '/admin/tournaments/new'
      preLoaderRoute: typeof AdminTournamentsNewIndexImport
      parentRoute: typeof AdminLayoutImport
    }
    '/admin/tournaments/$tournamentid/brackets/': {
      id: '/admin/tournaments/$tournamentid/brackets/'
      path: '/brackets'
      fullPath: '/admin/tournaments/$tournamentid/brackets'
      preLoaderRoute: typeof AdminTournamentsTournamentidBracketsIndexImport
      parentRoute: typeof AdminTournamentsTournamentidLayoutImport
    }
    '/admin/tournaments/$tournamentid/edit/': {
      id: '/admin/tournaments/$tournamentid/edit/'
      path: '/edit'
      fullPath: '/admin/tournaments/$tournamentid/edit'
      preLoaderRoute: typeof AdminTournamentsTournamentidEditIndexImport
      parentRoute: typeof AdminTournamentsTournamentidLayoutImport
    }
    '/admin/tournaments/$tournamentid/matches/': {
      id: '/admin/tournaments/$tournamentid/matches/'
      path: '/matches'
      fullPath: '/admin/tournaments/$tournamentid/matches'
      preLoaderRoute: typeof AdminTournamentsTournamentidMatchesIndexImport
      parentRoute: typeof AdminTournamentsTournamentidLayoutImport
    }
    '/admin/tournaments/$tournamentid/participants/': {
      id: '/admin/tournaments/$tournamentid/participants/'
      path: '/participants'
      fullPath: '/admin/tournaments/$tournamentid/participants'
      preLoaderRoute: typeof AdminTournamentsTournamentidParticipantsIndexImport
      parentRoute: typeof AdminTournamentsTournamentidLayoutImport
    }
  }
}

// Create and export the route tree

interface AdminTournamentsTournamentidLayoutRouteChildren {
  AdminTournamentsTournamentidBracketsIndexRoute: typeof AdminTournamentsTournamentidBracketsIndexRoute
  AdminTournamentsTournamentidEditIndexRoute: typeof AdminTournamentsTournamentidEditIndexRoute
  AdminTournamentsTournamentidMatchesIndexRoute: typeof AdminTournamentsTournamentidMatchesIndexRoute
  AdminTournamentsTournamentidParticipantsIndexRoute: typeof AdminTournamentsTournamentidParticipantsIndexRoute
}

const AdminTournamentsTournamentidLayoutRouteChildren: AdminTournamentsTournamentidLayoutRouteChildren =
  {
    AdminTournamentsTournamentidBracketsIndexRoute:
      AdminTournamentsTournamentidBracketsIndexRoute,
    AdminTournamentsTournamentidEditIndexRoute:
      AdminTournamentsTournamentidEditIndexRoute,
    AdminTournamentsTournamentidMatchesIndexRoute:
      AdminTournamentsTournamentidMatchesIndexRoute,
    AdminTournamentsTournamentidParticipantsIndexRoute:
      AdminTournamentsTournamentidParticipantsIndexRoute,
  }

const AdminTournamentsTournamentidLayoutRouteWithChildren =
  AdminTournamentsTournamentidLayoutRoute._addFileChildren(
    AdminTournamentsTournamentidLayoutRouteChildren,
  )

interface AdminLayoutRouteChildren {
  AdminTournamentsTournamentidLayoutRoute: typeof AdminTournamentsTournamentidLayoutRouteWithChildren
  AdminDashboardIndexRoute: typeof AdminDashboardIndexRoute
  AdminTournamentsIndexRoute: typeof AdminTournamentsIndexRoute
  AdminTournamentsNewIndexRoute: typeof AdminTournamentsNewIndexRoute
}

const AdminLayoutRouteChildren: AdminLayoutRouteChildren = {
  AdminTournamentsTournamentidLayoutRoute:
    AdminTournamentsTournamentidLayoutRouteWithChildren,
  AdminDashboardIndexRoute: AdminDashboardIndexRoute,
  AdminTournamentsIndexRoute: AdminTournamentsIndexRoute,
  AdminTournamentsNewIndexRoute: AdminTournamentsNewIndexRoute,
}

const AdminLayoutRouteWithChildren = AdminLayoutRoute._addFileChildren(
  AdminLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminLayoutRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/uudised/$blogid': typeof UudisedBlogidRoute
  '/voistlused/$tournamentid': typeof VoistlusedTournamentidRoute
  '/klubid': typeof KlubidIndexRoute
  '/kontakt': typeof KontaktIndexRoute
  '/login': typeof LoginIndexRoute
  '/reeglid': typeof ReeglidIndexRoute
  '/reiting': typeof ReitingIndexRoute
  '/tere': typeof TereIndexRoute
  '/uudised': typeof UudisedIndexRoute
  '/voistlused': typeof VoistlusedIndexRoute
  '/admin/tournaments/$tournamentid': typeof AdminTournamentsTournamentidLayoutRouteWithChildren
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/tournaments': typeof AdminTournamentsIndexRoute
  '/profiil/$id': typeof ProfiilIdIndexRoute
  '/admin/tournaments/new': typeof AdminTournamentsNewIndexRoute
  '/admin/tournaments/$tournamentid/brackets': typeof AdminTournamentsTournamentidBracketsIndexRoute
  '/admin/tournaments/$tournamentid/edit': typeof AdminTournamentsTournamentidEditIndexRoute
  '/admin/tournaments/$tournamentid/matches': typeof AdminTournamentsTournamentidMatchesIndexRoute
  '/admin/tournaments/$tournamentid/participants': typeof AdminTournamentsTournamentidParticipantsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminLayoutRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/uudised/$blogid': typeof UudisedBlogidRoute
  '/voistlused/$tournamentid': typeof VoistlusedTournamentidRoute
  '/klubid': typeof KlubidIndexRoute
  '/kontakt': typeof KontaktIndexRoute
  '/login': typeof LoginIndexRoute
  '/reeglid': typeof ReeglidIndexRoute
  '/reiting': typeof ReitingIndexRoute
  '/tere': typeof TereIndexRoute
  '/uudised': typeof UudisedIndexRoute
  '/voistlused': typeof VoistlusedIndexRoute
  '/admin/tournaments/$tournamentid': typeof AdminTournamentsTournamentidLayoutRouteWithChildren
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/tournaments': typeof AdminTournamentsIndexRoute
  '/profiil/$id': typeof ProfiilIdIndexRoute
  '/admin/tournaments/new': typeof AdminTournamentsNewIndexRoute
  '/admin/tournaments/$tournamentid/brackets': typeof AdminTournamentsTournamentidBracketsIndexRoute
  '/admin/tournaments/$tournamentid/edit': typeof AdminTournamentsTournamentidEditIndexRoute
  '/admin/tournaments/$tournamentid/matches': typeof AdminTournamentsTournamentidMatchesIndexRoute
  '/admin/tournaments/$tournamentid/participants': typeof AdminTournamentsTournamentidParticipantsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminLayoutRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/uudised/$blogid': typeof UudisedBlogidRoute
  '/voistlused/$tournamentid': typeof VoistlusedTournamentidRoute
  '/klubid/': typeof KlubidIndexRoute
  '/kontakt/': typeof KontaktIndexRoute
  '/login/': typeof LoginIndexRoute
  '/reeglid/': typeof ReeglidIndexRoute
  '/reiting/': typeof ReitingIndexRoute
  '/tere/': typeof TereIndexRoute
  '/uudised/': typeof UudisedIndexRoute
  '/voistlused/': typeof VoistlusedIndexRoute
  '/admin/tournaments/$tournamentid': typeof AdminTournamentsTournamentidLayoutRouteWithChildren
  '/admin/dashboard/': typeof AdminDashboardIndexRoute
  '/admin/tournaments/': typeof AdminTournamentsIndexRoute
  '/profiil/$id/': typeof ProfiilIdIndexRoute
  '/admin/tournaments/new/': typeof AdminTournamentsNewIndexRoute
  '/admin/tournaments/$tournamentid/brackets/': typeof AdminTournamentsTournamentidBracketsIndexRoute
  '/admin/tournaments/$tournamentid/edit/': typeof AdminTournamentsTournamentidEditIndexRoute
  '/admin/tournaments/$tournamentid/matches/': typeof AdminTournamentsTournamentidMatchesIndexRoute
  '/admin/tournaments/$tournamentid/participants/': typeof AdminTournamentsTournamentidParticipantsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/about'
    | '/uudised/$blogid'
    | '/voistlused/$tournamentid'
    | '/klubid'
    | '/kontakt'
    | '/login'
    | '/reeglid'
    | '/reiting'
    | '/tere'
    | '/uudised'
    | '/voistlused'
    | '/admin/tournaments/$tournamentid'
    | '/admin/dashboard'
    | '/admin/tournaments'
    | '/profiil/$id'
    | '/admin/tournaments/new'
    | '/admin/tournaments/$tournamentid/brackets'
    | '/admin/tournaments/$tournamentid/edit'
    | '/admin/tournaments/$tournamentid/matches'
    | '/admin/tournaments/$tournamentid/participants'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/about'
    | '/uudised/$blogid'
    | '/voistlused/$tournamentid'
    | '/klubid'
    | '/kontakt'
    | '/login'
    | '/reeglid'
    | '/reiting'
    | '/tere'
    | '/uudised'
    | '/voistlused'
    | '/admin/tournaments/$tournamentid'
    | '/admin/dashboard'
    | '/admin/tournaments'
    | '/profiil/$id'
    | '/admin/tournaments/new'
    | '/admin/tournaments/$tournamentid/brackets'
    | '/admin/tournaments/$tournamentid/edit'
    | '/admin/tournaments/$tournamentid/matches'
    | '/admin/tournaments/$tournamentid/participants'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/about'
    | '/uudised/$blogid'
    | '/voistlused/$tournamentid'
    | '/klubid/'
    | '/kontakt/'
    | '/login/'
    | '/reeglid/'
    | '/reiting/'
    | '/tere/'
    | '/uudised/'
    | '/voistlused/'
    | '/admin/tournaments/$tournamentid'
    | '/admin/dashboard/'
    | '/admin/tournaments/'
    | '/profiil/$id/'
    | '/admin/tournaments/new/'
    | '/admin/tournaments/$tournamentid/brackets/'
    | '/admin/tournaments/$tournamentid/edit/'
    | '/admin/tournaments/$tournamentid/matches/'
    | '/admin/tournaments/$tournamentid/participants/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminLayoutRoute: typeof AdminLayoutRouteWithChildren
  AboutLazyRoute: typeof AboutLazyRoute
  UudisedBlogidRoute: typeof UudisedBlogidRoute
  VoistlusedTournamentidRoute: typeof VoistlusedTournamentidRoute
  KlubidIndexRoute: typeof KlubidIndexRoute
  KontaktIndexRoute: typeof KontaktIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  ReeglidIndexRoute: typeof ReeglidIndexRoute
  ReitingIndexRoute: typeof ReitingIndexRoute
  TereIndexRoute: typeof TereIndexRoute
  UudisedIndexRoute: typeof UudisedIndexRoute
  VoistlusedIndexRoute: typeof VoistlusedIndexRoute
  ProfiilIdIndexRoute: typeof ProfiilIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminLayoutRoute: AdminLayoutRouteWithChildren,
  AboutLazyRoute: AboutLazyRoute,
  UudisedBlogidRoute: UudisedBlogidRoute,
  VoistlusedTournamentidRoute: VoistlusedTournamentidRoute,
  KlubidIndexRoute: KlubidIndexRoute,
  KontaktIndexRoute: KontaktIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  ReeglidIndexRoute: ReeglidIndexRoute,
  ReitingIndexRoute: ReitingIndexRoute,
  TereIndexRoute: TereIndexRoute,
  UudisedIndexRoute: UudisedIndexRoute,
  VoistlusedIndexRoute: VoistlusedIndexRoute,
  ProfiilIdIndexRoute: ProfiilIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/about",
        "/uudised/$blogid",
        "/voistlused/$tournamentid",
        "/klubid/",
        "/kontakt/",
        "/login/",
        "/reeglid/",
        "/reiting/",
        "/tere/",
        "/uudised/",
        "/voistlused/",
        "/profiil/$id/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin/layout.tsx",
      "children": [
        "/admin/tournaments/$tournamentid",
        "/admin/dashboard/",
        "/admin/tournaments/",
        "/admin/tournaments/new/"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/uudised/$blogid": {
      "filePath": "uudised/$blogid.tsx"
    },
    "/voistlused/$tournamentid": {
      "filePath": "voistlused/$tournamentid.tsx"
    },
    "/klubid/": {
      "filePath": "klubid/index.tsx"
    },
    "/kontakt/": {
      "filePath": "kontakt/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/reeglid/": {
      "filePath": "reeglid/index.tsx"
    },
    "/reiting/": {
      "filePath": "reiting/index.tsx"
    },
    "/tere/": {
      "filePath": "tere/index.tsx"
    },
    "/uudised/": {
      "filePath": "uudised/index.tsx"
    },
    "/voistlused/": {
      "filePath": "voistlused/index.tsx"
    },
    "/admin/tournaments/$tournamentid": {
      "filePath": "admin/tournaments/$tournamentid/layout.tsx",
      "parent": "/admin",
      "children": [
        "/admin/tournaments/$tournamentid/brackets/",
        "/admin/tournaments/$tournamentid/edit/",
        "/admin/tournaments/$tournamentid/matches/",
        "/admin/tournaments/$tournamentid/participants/"
      ]
    },
    "/admin/dashboard/": {
      "filePath": "admin/dashboard/index.tsx",
      "parent": "/admin"
    },
    "/admin/tournaments/": {
      "filePath": "admin/tournaments/index.tsx",
      "parent": "/admin"
    },
    "/profiil/$id/": {
      "filePath": "profiil/$id/index.tsx"
    },
    "/admin/tournaments/new/": {
      "filePath": "admin/tournaments/new/index.tsx",
      "parent": "/admin"
    },
    "/admin/tournaments/$tournamentid/brackets/": {
      "filePath": "admin/tournaments/$tournamentid/brackets/index.tsx",
      "parent": "/admin/tournaments/$tournamentid"
    },
    "/admin/tournaments/$tournamentid/edit/": {
      "filePath": "admin/tournaments/$tournamentid/edit/index.tsx",
      "parent": "/admin/tournaments/$tournamentid"
    },
    "/admin/tournaments/$tournamentid/matches/": {
      "filePath": "admin/tournaments/$tournamentid/matches/index.tsx",
      "parent": "/admin/tournaments/$tournamentid"
    },
    "/admin/tournaments/$tournamentid/participants/": {
      "filePath": "admin/tournaments/$tournamentid/participants/index.tsx",
      "parent": "/admin/tournaments/$tournamentid"
    }
  }
}
ROUTE_MANIFEST_END */
