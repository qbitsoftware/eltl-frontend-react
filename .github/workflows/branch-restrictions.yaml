name: Branch Flow Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  branch-flow-check:
    runs-on: ubuntu-latest
    name: Validate Branch Flow
    steps:
      - name: Source branch check
        id: check-branch
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const baseRef = context.payload.pull_request.base.ref;
            const headRef = context.payload.pull_request.head.ref;
            
            console.log(`Pull request from ${headRef} to ${baseRef}`);
            
            const allowedMerges = {
              'main': ['development'],
            };
            
            if (allowedMerges[baseRef] && !allowedMerges[baseRef].includes(headRef)) {
              const allowedBranches = allowedMerges[baseRef].join(', ');
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: `⚠️ **Branch Restriction Error**: Branch \`${headRef}\` cannot be merged into \`${baseRef}\`. Only these branches can be merged into \`${baseRef}\`: \`${allowedBranches}\`.`
              });
              
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: ['invalid-branch-flow']
              });
              
              core.setFailed(`Only '${allowedBranches}' branch(es) can be merged into '${baseRef}'`);
              return;
            }
            
            console.log(`Branch "${headRef}" can be merged into "${baseRef}"`);
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: ['valid-branch-flow']
            });

  validate-branch-source:
    runs-on: ubuntu-latest
    name: Required Branch Source Check
    needs: branch-flow-check
    steps:
      - name: Check branch flow validation status
        run: |
          echo "This check ensures the PR comes from an allowed source branch"
          if [ "${{ needs.branch-flow-check.result }}" != "success" ]; then
            exit 1
          fi
