name: Label-Driven Deployment

on:
  pull_request:
    types: [labeled]

jobs:
  deploy-to-test:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'deploy to test' && github.base_ref == 'development'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm run build

      - name: Merge to test branch
        run: |
          git fetch origin test-managed-by-automation
          git checkout test-managed-by-automation
          git pull origin test-managed-by-automation
          git merge --no-ff origin/${{ github.head_ref }} -m "Merge PR #${{ github.event.pull_request.number }} lendab testis livei"
          git push origin test-managed-by-automation

      - name: PR comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'âœ… Changes should be visible on test.eltl.ee within 5 minutes, if not, ask Markus troubleshoot.'
            })

  merge-to-development:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'merge to development' && github.base_ref == 'development'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm run build

      - name: Merge PR to development
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              merge_method: 'merge'
            });

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'âœ… PR has been merged to development branch.'
            });

  deploy-to-production:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'deploy to production' && github.base_ref == 'main' && github.head_ref == 'development'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm run build

      - name: Merge PR to main
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              merge_method: 'merge'
            });

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'ðŸš€ PR has been merged to main branch and deployed to production.'
            });
